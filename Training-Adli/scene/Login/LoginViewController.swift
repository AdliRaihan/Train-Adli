//
//  LoginViewController.swift
//  Training-Adli
//
//  Created by Stella Patricia on 03/10/19.
//  Copyright (c) 2019 Adli Raihan. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import WebKit
import SwiftyUserDefaults

protocol LoginDisplayLogic: class
{
    func displayCodeAuthentication (viewModel : Login.authenticationCode)
    func displayCodeAuthenticationFailed (message : String)
}

class LoginViewController: BaseViewController, LoginDisplayLogic
{
    var interactor: LoginBusinessLogic?
    var router: (NSObjectProtocol & LoginRoutingLogic & LoginDataPassing)?
    @IBOutlet weak var webView: LoginWebView!
    
    // MARK: Object lifecycle
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
    {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder)
    {
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: Setup
    private func setup()
    {
        let viewController = self
        let interactor = LoginInteractor()
        let presenter = LoginPresenter()
        let router = LoginRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    // MARK: Routing
    override func prepare(for segue: UIStoryboardSegue, sender: Any?)
    {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }
    
    // MARK: View lifecycle
    override func viewDidLoad()
    {
        super.viewDidLoad()
        self.WebViewSetup()
    }
    
    // MARK: Do something
    //@IBOutlet weak var nameTextField: UITextField!
    private func WebViewSetup() {
        webView.load(URLRequest.init(url: URL.init(string: ConstantVariables.urlToGetAuthorization)!))
        webView.delegate = self
    }
    
    // when auth api success
    func displayCodeAuthentication(viewModel : Login.authenticationCode) {
        Defaults[.userAuthenticationCode] = viewModel.code ?? ""
        if Defaults[.userAuthenticationCode] != "" {
            self.router?.routeToDashboard()
        }
    }
    // when auth api given failed
    func displayCodeAuthenticationFailed(message: String) {
        self.showAlert(_message: message)
    }
}

extension LoginViewController : loginWebViewDelegate {
    func didCommit() {
        self.showLoading("")
    }
    func didFinish(authCode value: String) {
        self.hideLoading("")
        interactor?.interactorParsingCode(CreateAuth: value)
    }
}
